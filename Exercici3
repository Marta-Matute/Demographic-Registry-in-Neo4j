//Apartat a

//Graph amb les famílies
CALL gds.graph.project('Graph1', ['PERSON', 'HOUSE'], 'LIVES');

//Nombre de persones per família nuclear
CALL gds.wcc.stream('Graph1')
YIELD componentId, nodeId
RETURN componentId, size(collect(nodeId)) AS mida, collect(distinct gds.util.asNode(nodeId).Municipality) AS municipi
ORDER BY mida DESC;

//Graph amb totes les relacions
CALL gds.graph.project('Graph2',['HOUSE','PERSON'],['FAMILY','SAME_AS','LIVES']);

//Distribució dels nodes segons el municipi del habitatge
CALL gds.wcc.stream('Graph2')
YIELD nodeId, componentId
WHERE gds.util.asNode(nodeId).Municipality is not null
RETURN distinct gds.util.asNode(nodeId).Municipality AS municipi, size(collect(distinct componentId)) AS mida
ORDER BY municipi;

//Distribució dels nodes segons el cognom
CALL gds.wcc.stream('Graph2')
YIELD nodeId, componentId
WHERE gds.util.asNode(nodeId).Last_Name <> 'nan'
RETURN distinct gds.util.asNode(nodeId).Last_Name AS nom, size(collect(distinct componentId)) AS mida
ORDER BY mida DESC
LIMIT 10;

//Per cada municipi i any el nombre de parelles del tipus: (Individu)—(Habitatge)
CALL gds.graph.project('Graph','PERSON','LIVES');

CALL gds.wcc.stream('Graph')
YIELD componentId, nodeId
WITH componentId, collect(nodeId) AS nodes, size(collect(nodeId)) AS mida
ORDER BY mida DESC
MATCH path=((n)-->(h:HOUSE))
WHERE id(n) IN nodes
RETURN h.Municipality As Municipi, h.Registry_Year AS `Any`, size(collect(n.Id)) AS `Parelles totals`
ORDER BY `Any`, Municipi ASC;


//Components connexes que no estan connectades a cap node de tipus ‘Habitatge’.
CALL gds.wcc.stream('Graph2')
YIELD componentId, nodeId
WITH componentId, collect(nodeId) AS nodes
MATCH (n)
WHERE (NOT (n)-->(:HOUSE)) AND (id(n) IN nodes)
RETURN count(DISTINCT componentId) AS NumComponents;


//Apartat b

//Aresta amb nom “MATEIX_HAB“ entre aquests habitatges
MATCH (h1:HOUSE),(h2:HOUSE)
WHERE h1.Home_Id <> h2.Home_Id AND h1.Number=h2.Number AND h1.Municipality=h2.Municipality AND h1.Street=h2.Street AND h1.Registry_Year < h2.Registry_Year
MERGE (h2)-[:MATEIX_HAB]->(h1)
RETURN h1.Home_Id, h1.Number, h1.Municipality, h1.Street, h1.Registry_Year, h2.Home_Id, h2.Number, h2.Municipality, h2.Street, h2.Registry_Year;


//Graf amab nodes Individu i Habitatge i relacions VIU, FAMILIA, MATEIX_HAB 
CALL gds.graph.project('Graph3',['PERSON', 'HOUSE'], ['LIVES', 'FAMILY', 'MATEIX_HAB']);

//Similaritat entre els nodes del Graf3 
CALL gds.nodeSimilarity.write('Graph3',{
  writeRelationshipType:'SIMILAR',
  writeProperty:'score',
  similarityCutoff:0.30
  })
YIELD nodesCompared, relationshipsWritten
  
MATCH p=()-[r:SIMILAR]->(:HOUSE) RETURN p;


